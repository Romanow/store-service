openapi: 3.0.1
info:
  title: Сервис Магазина
  version: '1.0'

servers:
  - url: http://localhost:8180
    description: Local server

security:
  - TokenBasedAuth: [ ]

paths:
  /api/public/v1/orders:
    get:
      operationId: orders
      summary: Получить список заказов пользователя
      tags:
        - public
      security:
        - TokenBasedAuth: [ ]
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
      responses:
        200:
          description: Список заказов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/public/v1/orders/{orderUid}:
    get:
      operationId: orderByUid
      summary: Получить подробную информацию о заказе
      tags:
        - public
      security:
        - TokenBasedAuth: [ ]
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Подробная информация о заказе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedOrderResponse'
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/public/v1/orders/{orderUid}/cancel:
    delete:
      operationId: cancel
      summary: Отменить заказ
      tags:
        - public
      security:
        - TokenBasedAuth: [ ]
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        202:
          description: Заказ отменен
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/public/v1/orders/{orderUid}/warranty:
    post:
      operationId: warranty
      summary: Запросить гарантию по заказу
      tags:
        - public
      security:
        - TokenBasedAuth: [ ]
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        200:
          description: Информация о статусе гарантии
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarrantyResponse'
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/public/v1/orders/purchase:
    post:
      operationId: purchase
      summary: Выполнить заказ
      tags:
        - public
      security:
        - TokenBasedAuth: [ ]
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        201:
          description: Заказ создан
          headers:
            Location:
              description: Ссылка на созданный заказ
              style: simple
              schema:
                type: string
        400:
          description: Ошибка входных данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Товар недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    TokenBasedAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          nullable: true
    OrderResponse:
      type: object
      example:
        {
          "orderUid": "d3795a76-d514-4db7-90d1-173e7e49aedb",
          "userId": "romanow",
          "status": "NEW",
          "orderDate": "2025-05-05T10:00:00Z",
          "items": [
            "Lego 8880",
          ]
        }
      properties:
        orderUid:
          type: string
          format: uuid
        userId:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderDate:
          type: string
          format: date-time
        items:
          type: array
          items:
            type: string
      additionalProperties: false
    DetailedOrderResponse:
      type: object
      example:
        {
          "orderUid": "d3795a76-d514-4db7-90d1-173e7e49aedb",
          "userId": "romanow",
          "status": "NEW",
          "orderDate": "2025-05-05T10:00:00Z",
          "items": [
            {
              "name": "Lego 8880",
              "description": "Lego Technic Supercar 8880",
              "manufacturer": "Lego",
              "imageUrl": "https://main-cdn.sbermegamarket.ru/big2/lego-8880.jpg",
              "warranty": {
                "name": "Lego 8880",
                "status": "ON_WARRANTY",
                "comment": "",
                "warrantyStartDate": "2025-05-05T10:00:00Z",
                "lastUpdateDate": "2025-05-05T10:00:00Z"
              }
            }
          ]
        }
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ItemInfo'
    ItemInfo:
      type: object
      example:
        {
          "name": "Lego 8880",
          "description": "Lego Technic Supercar 8880",
          "manufacturer": "Lego",
          "imageUrl": "https://main-cdn.sbermegamarket.ru/big2/lego-8880.jpg",
          "warranty": {
            "name": "Lego 8880",
            "status": "ON_WARRANTY",
            "comment": "https://main-cdn.sbermegamarket.ru/big2/lego-8880.jpg",
            "warrantyStartDate": "2025-05-05T10:00:00Z",
            "lastUpdateDate": "2025-05-05T10:00:00Z"
          }
        }
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        manufacturer:
          type: string
          nullable: true
        imageUrl:
          type: string
          format: url
          nullable: true
        warranty:
          $ref: '#/components/schemas/WarrantyStatusInfo'
      additionalProperties: false
    WarrantyStatusInfo:
      type: object
      example:
        {
          "status": "ON_WARRANTY",
          "comment": "",
          "warrantyStartDate": "2025-05-05T10:00:00Z",
          "lastUpdateDate": "2025-05-05T10:00:00Z"
        }
      properties:
        status:
          $ref: '#/components/schemas/WarrantyStatus'
        comment:
          type: string
          nullable: true
        warrantyStartDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
      additionalProperties: false
    WarrantyResponse:
      type: object
      example:
        {
          "name": "Lego 8880",
          "status": "TAKE_NEW",
          "comment": ""
        }
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/WarrantyStatus'
        comment:
          type: string
          nullable: true
    OrderStatus:
      type: string
      enum:
        - NEW
        - PROCESSED
        - DENIED
        - CANCELED
    WarrantyStatus:
      type: string
      enum:
        - ON_WARRANTY
        - TAKE_NEW
        - REPAIR
        - REMOVED_FROM_WARRANTY
