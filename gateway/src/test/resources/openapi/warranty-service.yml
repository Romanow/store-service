openapi: 3.0.1
info:
  title: Гарантийный Сервис
  version: '1.0'

servers:
  - url: http://localhost:8380
    description: Local server

security:
  - TokenBasedAuth: [ ]

paths:
  /api/private/v1/warranty/{orderUid}:
    get:
      operationId: status
      summary: Получить статус гарантии
      tags:
        - private
      security:
        - TokenBasedAuth: [ ]
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Информация о гарантии
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarrantyStatusResponse'
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/private/v1/warranty/{orderUid}/start:
    post:
      operationId: start
      summary: Поставить заказ на гарантию
      tags:
        - private
      security:
        - TokenBasedAuth: [ ]
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        202:
          description: Заказ поставлен на гарантию
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/private/v1/warranty/{orderUid}/request:
    post:
      operationId: warrantyRequest
      summary: Запрос гарантии
      tags:
        - private
      security:
        - TokenBasedAuth: [ ]
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        200:
          description: Заказ поставлен на гарантию
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarrantyResponse'
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: Товар не на гарантии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/private/v1/warranty/{orderUid}/stop:
    delete:
      operationId: stop
      summary: Снять заказ с гарантии
      tags:
        - private
      security:
        - TokenBasedAuth: [ ]
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        202:
          description: Заказ снять с гарантии
        401:
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Гарантия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    TokenBasedAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          nullable: true
    WarrantyStatusResponse:
      type: object
      example:
        {
          "name": "Lego 8880",
          "status": "ON_WARRANTY",
          "comment": "",
          "warrantyStartDate": "2025-05-05T10:00:00Z",
          "lastUpdateDate": "2025-05-05T10:00:00Z"
        }
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/WarrantyStatus'
        comment:
          type: string
          nullable: true
        warrantyStartDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
      additionalProperties: false
    WarrantyResponse:
      type: object
      example:
        {
          "name": "Lego 8880",
          "status": "TAKE_NEW",
          "comment": ""
        }
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/WarrantyStatus'
        comment:
          type: string
          nullable: true
    WarrantyStatus:
      type: string
      enum:
        - ON_WARRANTY
        - TAKE_NEW
        - REPAIR
        - REMOVED_FROM_WARRANTY
